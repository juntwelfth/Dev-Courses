selector
    tag
        a {                         a = selector
            color:red;              color:red = declaration
        }                           color = property, red = value

    class                           class > a
        .classname {                class="classname"
            color:red;              classname에 해당되는 모든 클래스 설정
        }

    id                              id > class > a
        #idname {                   id는 단 한번만 등장해야함
            color:red;
        }

    
        * {                         전역설정
            color:red;
        }

        *                           everything, 권장X 브라우저에 과부하가 걸림

        #X                          id선택자. 유연성이 없고 재활용 불가능
        
        .X                          class. 스타일을 한 그룹의 요소에 적용할 때는 class 이용
                                    찾을 가망성이 거의 없는 요소에 id를 사용하고 그 유일한 요소에만 스타일을 적용하라

        X.Y         ul.classname    ul요소중 해당 class이름을 가진 class 선택자

        X Y         ul li           descendant. 조상, 자손 선택자   ul밑에 있는 모든 li를 선택
                                    선택자가 X Y Z A B.error 처럼 보이면 X 모든 요소에 꼭 가중치를 둬야 하는지 자문

        X > Y       #id > ul        직계 자식만을 선택. id이름의 자손인 ul들을 선택하지만 ul의 자식들은 선택하지 않음

        X           ul              한 페이지에 있는 모든 ul 요소 선택

        X + Y       ul + p          인접 선택자. 앞의 요소 바로 뒤에 있는 '요소 하나만'선택

        X ~ Y       ul ~ p          X + Y와 유사하지만 덜 엄격함 ul 아래 있는 모든 p 요소를 선택

        X, Y        ul, p           ul과 p를 동시에 선택
        

    attributes selector
        X[title]    a[title]        title 속성이 있는 a태그만을 선택

        X[href="google.com"]        해당 링크에 연결된 전체 a(앵커) 태그 선택
        a[href="google.com"]        융퉁성이 없음. 만약 링크가 www.google.com이라면 연결되지 않음

        X[href*="google.com"]       별표는 입력값이 속성값 안 어딘가에 보여야 한다는 것을 의미함
        a[href*="google.com"]       그렇게 이 구문은 www.google.com, net.google.com 등 적용이됨
                                    하지만 폭넓은 표현이라 구글로 연결되지 않을 가능성이 많음

        X[href^="http"]             만약 http로 시작하는 href값을 가진 앵커 태그를 대상으로 하고 싶다면
        a[href^="http"]             이런 선택자를 사용하면 된다. http://로는 찾아지지 않는다.

        X[href$=".jpg"]             이번 경우에는 이미지(나 최소한 .jpg로 끝나는 url)로 링크가 걸린
        a[href$=".jpg"]             앵커 전체를 선택함. gif와 png는 영향받지 않음

        X[data-*="image"]           png, jpeg, jpg, gif등 이미지 형식들을 선택할 때
        a[data-filetype="image"]    이미지로 링크가 걸린 앵커마다 data-filetype 커스텀 속성을 넣어주면
                                    해당 속성이 적용된 앵커들만 선택가능

        X:checked                   라디오 버튼이나 체크박스처럼 사용자 인터페이스 요소만을 선택

        X:not       div:not(#asdf)  div를 선택하고 싶은데 그중에서 id가 asdf인것만 빼고 싶을때

        X:nth-child(n)              n번째 요소를 선택할 때. 1부터시작
        X:nth-last-child(n)         뒤에서부터 세기
        X:nth-of-type(n)
        ul:nth-of-type(3)           ul요소중 세번째 요소만 선택
        X:nth-last-of-type(n)
        X:first-child               첫번째 자식만 선택
        X:last-child
        

    pseudo class selector           가상 클래스는 아래 순서대로 지정하는 것이 좋음.
        X:link      a:link          모든 링크

        X:visited   a:visited       모든 방문했던 링크
                                    color    background-color    border-color    outline-color
                                    the color parts of the fill and stroke properties
                                    visited는 보안상의 이유로 위에있는 속성만 변경 가능

        X:hover     a:hover         마우스를 롤오버 했을 때

        X:active    a:active        마우스를 클릭했을 때
</style>

    <a href="safsf" style="">     
        color                       색 설정
        text-decoration             텍스트 설정
            :none                   밑줄 없애기
            :underline              밑줄 만들기



properties

    font
        -size
            :rem                    html태그에 적용된 font-size의 영향을 받는다
                                    html태그의 폰트 크기에 따라 상대적으로 크기가 결정되어 이해하기 쉽다 (권장권장)
        -family                     글꼴
        -weight                     굵기
    line-height                     줄 높이
    text-align                      정렬
        :justify                    양쪽 균등 정렬
    width
    height
    background-color


!important
    우선순위 상관없이 가장 최우선으로 처리시키는 것

    color: red !important;

margin, padding
    margin-top 할 필요없이 숫자만 적으면 시계방향으로 돌아감

    margin: 10px 20px 20px 10px;        top 10px, right 20px, bottom 20px, left 10px;


background
    -color
    -image: url("")
    -repeat
        :no-repeat
        :repeat-x(y)
    -attachment
        :fixed
        :scroll
    -size
        :cover              화면에 맞게 늘리기
        :contain
    -position: center


filter
    grayscale(n%)           n%만큼 흑백효과
    blur()

transition
    -property
        :all                트랜지션
    -duration
        :1s                 1초에 걸쳐 트랜지션
    -delay                  딜레이


blend
    background-blend-mode
        :color
        :color-burn
        ...

    mix-blend-mode
        :screen
        ...

transform                   display:inline-block 해줘야함
    :scaleX(n)              X축 스케일 설정
    :scaleY(n)              Y축 스케일 설정
    :scaleX(n) scaleY(n)    X,Y축 둘다 설정하고 싶을 때
    :scale(n, n)            위와 동일
    :translate(n, n)        움직이기


svg
    vector 식 이미지
    png는 비트맵 형식으로 확대하면 깨짐


box-shadow      offset-x(x축으로 얼마나 길게) offset-y(y축) blur-radius, spread-radius, color
box-shadow:         0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);

opacity         투명도
    1           기본값
    0.5         50% 씨스루 느낌
    0           completely transparent

text-transform
    :lowercase          소문자로
    :uppercase          대문자로
    :capitalize         첫글자만 대문자로
    :initial            기본값 사용
    :inherit            상속받기
    :none               오리지널 텍스트 사용

z-index
    :n                  우선순위



animation
    -timing-function    같은 시간이지만 다른 타이밍의 방식
        :ease-out       가다가 천천히 멈추는
        :linear         그냥 일직선으로
        :cubic-bezier   